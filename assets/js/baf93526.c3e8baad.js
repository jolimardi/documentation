"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8178],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>v});var t=a(7294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=t.createContext({}),p=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(i.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=l,v=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return a?t.createElement(v,r(r({ref:n},c),{},{components:a})):t.createElement(v,r({ref:n},c))}));function v(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=a.length,r=new Array(o);r[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[u]="string"==typeof e?e:l,r[1]=s;for(var p=2;p<o;p++)r[p]=a[p];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5201:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var t=a(7462),l=(a(7294),a(3905));const o={title:"Step by step"},r="Installer une application laravel jolimardi",s={unversionedId:"laravel/Installation/Setup",id:"laravel/Installation/Setup",title:"Step by step",description:"Dans cette page, nous allons cr\xe9er une application Laravel compl\xe8te avec un bon nombre de fonctionnalit\xe9. Du point de vue de la console d'abord, et si besoin nous modifierons l\xe9g\xe8rement le code.",source:"@site/docs/laravel/Installation/Setup.md",sourceDirName:"laravel/Installation",slug:"/laravel/Installation/Setup",permalink:"/documentation/docs/laravel/Installation/Setup",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/laravel/Installation/Setup.md",tags:[],version:"current",frontMatter:{title:"Step by step"},sidebar:"laravelSidebar",previous:{title:"Intro",permalink:"/documentation/docs/laravel/intro"},next:{title:"Packages (commandes)",permalink:"/documentation/docs/laravel/Installation/package-laravel"}},i={},p=[{value:"Installer Laravel",id:"installer-laravel",level:2},{value:"Projet de base Laravel",id:"projet-de-base-laravel",level:3},{value:"Configuration du .env",id:"configuration-du-env",level:3},{value:"D\xe9marrage du serveur local",id:"d\xe9marrage-du-serveur-local",level:2},{value:"Installation des packages Composer",id:"installation-des-packages-composer",level:2},{value:"Basiques",id:"basiques",level:3},{value:"Blade Icons",id:"blade-icons",level:3},{value:"CSS JoliMardi",id:"css-jolimardi",level:3},{value:"Menu JoliMardi",id:"menu-jolimardi",level:3},{value:"Sections JoliMardi",id:"sections-jolimardi",level:3},{value:"Importer le CSS",id:"importer-le-css",level:4},{value:"Utilisation dans les Views",id:"utilisation-dans-les-views",level:4},{value:"Ajout d&#39;une nouvelle section via Nova",id:"ajout-dune-nouvelle-section-via-nova",level:4},{value:"Flash",id:"flash",level:3},{value:"Cr\xe9ation du Layout Blade",id:"cr\xe9ation-du-layout-blade",level:2},{value:"Vite.js",id:"vitejs",level:2},{value:"Compilation CSS avec Vite.js",id:"compilation-css-avec-vitejs",level:3},{value:"Chargement des assets dans le HTML avec Vite.js",id:"chargement-des-assets-dans-le-html-avec-vitejs",level:3},{value:"JS commun \xe0 tous les sites JoliMardi",id:"js-commun-\xe0-tous-les-sites-jolimardi",level:2},{value:"Laravel Nova",id:"laravel-nova",level:2},{value:"Il faut d&#39;abord ajouter le repo priv\xe9 et ses credentials :",id:"il-faut-dabord-ajouter-le-repo-priv\xe9-et-ses-credentials-",level:3},{value:"Ensuite, installer Nova",id:"ensuite-installer-nova",level:3},{value:"Ajouter le premier utilisateur",id:"ajouter-le-premier-utilisateur",level:3},{value:"Important, ajouter les emails autoris\xe9s",id:"important-ajouter-les-emails-autoris\xe9s",level:3},{value:"Installation de plugins JS fr\xe9quents",id:"installation-de-plugins-js-fr\xe9quents",level:2},{value:"jQuery",id:"jquery",level:3},{value:"Fancybox",id:"fancybox",level:3},{value:"Plugins Laravel",id:"plugins-laravel",level:2},{value:"Nova helpers",id:"nova-helpers",level:3},{value:"Jolimardi plugins",id:"jolimardi-plugins",level:2},{value:"@TODO",id:"todo",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...a}=e;return(0,l.kt)(u,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"installer-une-application-laravel-jolimardi"},"Installer une application laravel jolimardi"),(0,l.kt)("p",null,"Dans cette page, nous allons cr\xe9er une application Laravel compl\xe8te avec un bon nombre de fonctionnalit\xe9. Du point de vue de la console d'abord, et si besoin nous modifierons l\xe9g\xe8rement le code. "),(0,l.kt)("h2",{id:"installer-laravel"},"Installer Laravel"),(0,l.kt)("h3",{id:"projet-de-base-laravel"},"Projet de base Laravel"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Remplacer ",(0,l.kt)("inlineCode",{parentName:"p"},"nom-du-site")," par le nom du projet. Le projet sera cr\xe9\xe9 dans un sous-dossier.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer create-project laravel/laravel nom-du-site\ncd nom-du-site\ncomposer update\nnpm install\nphp artisan key:generate\n")),(0,l.kt)("h3",{id:"configuration-du-env"},"Configuration du .env"),(0,l.kt)("p",null,"Il faut ensuite \xe9diter le ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," \xe0 la racine, pour qu'il ressemble \xe0 \xe7a :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="/.env"',title:'"/.env"'},"APP_NAME=\"Mon Site\"\nAPP_ENV=local\nAPP_KEY=base64:M5qwgNN9c3kAR3aoQkCKwKzLb/oZbbtub2HNvcvlJpc=\nAPP_DEBUG=true\nAPP_URL=http://mon-site.local\n\n# NOVA_AUTHORIZED_EMAILS='mon-email@gmail.com, deuxieme-email@gmail.com' # Modifier app/Providers/NovaServiceProvider.php dans la fonction gate() pour ajouter :\n# protected function gate() {\n#        Gate::define('viewNova', function ($user) {\n#            $authorized_emails_str = ENV('NOVA_AUTHORIZED_EMAILS', 'romain.cherot@gmail.com, hodeeemilien@gmail.com');\n#            $authorized_emails = explode(',', $authorized_emails_str);\n#            $authorized_emails = array_map('trim', $authorized_emails);\n#            return in_array($user->email, $authorized_emails);\n#        });\n#    }\n\n# SENDINBLUE_KEY=\"xkeysib-A_COMPLETER\"\n# SENDINBLUE_FROM_ADDRESS=\"contact@mon-site.com\"\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=monsite\nDB_USERNAME=root\nDB_PASSWORD=\"motdepasseDB\"\n\n\n## REDIS - Used for Cache and Sessions (available on Forge)\n## Comment if no redis available on your server\n\n# CACHE_DRIVER=redis\n# SESSION_DRIVER=redis\n# SESSION_LIFETIME=1440 # 1 jour en minutes\n\n# REDIS_HOST=127.0.0.1\n# REDIS_PASSWORD=null\n# REDIS_PORT=6379\n\n# FILESYSTEM_DISK=local\n\n")),(0,l.kt)("h2",{id:"d\xe9marrage-du-serveur-local"},"D\xe9marrage du serveur local"),(0,l.kt)("p",null,"On peut ex\xe9cuter Laravel via PHP (Wamp avec un VirtualHost et une ligne dans le fichier Hosts de Widnows, par exemple), ou via le serveur int\xe9gr\xe9 (basique, mais pratique pour d\xe9panner) :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan serve\n")),(0,l.kt)("p",null,"Pour les assets et le live reload, lancer Vite.js :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm run dev\n")),(0,l.kt)("h2",{id:"installation-des-packages-composer"},"Installation des packages Composer"),(0,l.kt)("h3",{id:"basiques"},"Basiques"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require barryvdh/laravel-debugbar --dev\n")),(0,l.kt)("h3",{id:"blade-icons"},"Blade Icons"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'composer require blade-ui-kit/blade-icons\ncomposer require codeat3/blade-coolicons\n# Cr\xe9er le dossier qui contiendra les icones "custom" pour le projet\nmkdir ressources/icons\n\nphp artisan vendor:publish --tag=blade-icons\nphp artisan view:clear\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="/config/blade-icons.php"',title:'"/config/blade-icons.php"'},"<?php\n\nreturn [\n    'sets' => [\n        'default' => [\n            'path' => 'resources/icons',\n            'prefix' => '',\n        ],\n        // Coolicon est automatiquement dispo en plus de default s'il est install\xe9\n    ],\n\n    // Global Default Classes - applied to all icons by default\n    'class' => 'icon',\n\n    'components' => [\n        // Disable the component, only use directive @svg(...) -> perf boost\n        'disabled' => true,\n    ],\n];\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="example.blade.php"',title:'"example.blade.php"'},"<body>\n\n    // Pour afficher l'icone custom du projet /ressources/icons/icon-perso.svg\n    @svg('icon-perso')\n\n    // Pour afficher l'icone Coolicons Hamburger\n    @svg('coolicon-hamburger-md')\n\n    // Pour ajouter une classe, c'est le 2nd argument\n    @svg('coolicon-hamburger-md', 'ma-classe-pour-cette-icone')\n\n    // Rendu dans le HTML :\n    <svg class=\"icon ma-classe-pour-cette-icone\" viewBox=\"0 0 24 24\" fill=\"none\"><g>...</g></svg>\n\n</body>\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blade-ui-kit.com/blade-icons?set=53"},"La liste des ic\xf4nes ici.")),(0,l.kt)("h3",{id:"css-jolimardi"},"CSS JoliMardi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd ressources/css\ngit clone https://github.com/jolimardi/jolimardi-css\n")),(0,l.kt)("p",null,"Puis importer le CSS dans le projet :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="resources/css/app.css"',title:'"resources/css/app.css"'},'@import "jolimardi-css/jolimardi.css";\n')),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Pour mettre \xe0 jour ce CSS, ex\xe9cuter ",(0,l.kt)("inlineCode",{parentName:"p"},"git submodule update --remote --merge")," (pratique \xe0 mettre dans le Deploy Script de Forge par exemple, apr\xe8s le ",(0,l.kt)("inlineCode",{parentName:"p"},"git pull"),").")),(0,l.kt)("h3",{id:"menu-jolimardi"},"Menu JoliMardi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'composer require jolimardi/laravel-menu:dev-master\nphp artisan vendor:publish --provider="JoliMardi\\Menu\\MenuServiceProvider" --tag=config\n')),(0,l.kt)("p",null,"Ajouter le component ",(0,l.kt)("inlineCode",{parentName:"p"},"<x-menu/>")," dans un template blade, l\xe0 o\xf9 vous voulez afficher le menu.\nModifier ",(0,l.kt)("inlineCode",{parentName:"p"},"config/menu.yml")," pour ajouter des routes au composant."),(0,l.kt)("h3",{id:"sections-jolimardi"},"Sections JoliMardi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'composer require jolimardi/laravel-sections:dev-main\nphp artisan vendor:publish --provider="JoliMardi\\MySections\\MySectionsServiceProvider"\nphp artisan migrate\n')),(0,l.kt)("p",null,"Il est maintenant possible d'utiliser le composant ",(0,l.kt)("inlineCode",{parentName:"p"},"<x-section><x-section />"),"."),(0,l.kt)("h4",{id:"importer-le-css"},"Importer le CSS"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="resources/css/app.css"',title:'"resources/css/app.css"'},'@import "../../public/vendor/mysections/sections.css";\n')),(0,l.kt)("h4",{id:"utilisation-dans-les-views"},"Utilisation dans les Views"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"<body>\n    @mySection($all_sections_from_db, $key_of_the_section_to_display)\n</body>\n\n")),(0,l.kt)("h4",{id:"ajout-dune-nouvelle-section-via-nova"},"Ajout d'une nouvelle section via Nova"),(0,l.kt)("p",null,"Se connecter \xe0 Nova pour ajouter une section. La cl\xe9 est importante pour afficher la section (c'est son ",(0,l.kt)("em",{parentName:"p"},"machine name"),"). Il est possible d'ajouter des types de section (via Nova), puis de cr\xe9er le nouveau template dans ",(0,l.kt)("inlineCode",{parentName:"p"},"/ressources/views/components/vendor/laravel-sections/ma-nouvelle-section.blade.php")),(0,l.kt)("h3",{id:"flash"},"Flash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require jolimardi/laravel-flash:dev-master\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},":dev-main")," permet d'outre-passer la v\xe9rification de stabilit\xe9 pour le moment.")),(0,l.kt)("p",null,"Ajouter l'alias personnalis\xe9 dans ",(0,l.kt)("inlineCode",{parentName:"p"},"config/app.php")," -> ",(0,l.kt)("inlineCode",{parentName:"p"},"aliases"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="/config/app.php"',title:'"/config/app.php"'},"<?php\n\nuse Illuminate\\Support\\Facades\\Facade;\nuse Illuminate\\Support\\ServiceProvider;\n\nreturn [\n    ...\n    // Tout en bas du fichier\n\n    'aliases' => Facade::defaultAliases()->merge([\n        //highlight-start\n        'MyFlash' => JoliMardi\\Flash\\Flash::class,\n        //highlight-end\n    ])->toArray(),\n];\n")),(0,l.kt)("p",null,"Utiliser dans un controlleur ",(0,l.kt)("inlineCode",{parentName:"p"},"Flash::success('Ceci est un message de succ\xe8s');"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Retrouvez tout les types de message dans la documentation du package : ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/jolimardi/laravel-flash"},"https://github.com/jolimardi/laravel-flash"))),(0,l.kt)("h2",{id:"cr\xe9ation-du-layout-blade"},"Cr\xe9ation du Layout Blade"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"php artisan make:component Layout\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="/app/Views/Components/Layout.php"',title:'"/app/Views/Components/Layout.php"'},"public function render(): View|Closure|string {\n    // highlight-start\n    return view('layout');\n    // highlight-end\n}\n")),(0,l.kt)("p",null,"Puis cr\xe9er le template principal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="/ressources/views/layout.blade.php"',title:'"/ressources/views/layout.blade.php"'},'<html lang="fr">\n\n<head>\n    <meta charset="utf-8">\n    <title>{{ $title ?? env(\'APP_NAME\') }}</title>\n    {{-- <meta name="description" content="{{ $description }}">--}}\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n\n    <meta property="og:url" content="{{ url()->full() }}" />\n    <meta property="og:title" content="{{ $title ?? env(\'APP_NAME\') }}" />\n    <meta property="og:site_name" content="{{ env(\'APP_NAME\') }}" />\n    {{-- <meta property="og:description" content="{{ $description }}" />--}}\n    <meta property="og:type" content="website" />\n    {{-- <meta property="og:image" content="{{ og_image }}" /> --}}\n\n    <meta property="og:locale" content="fr-FR" />\n    <meta http-equiv="content-language" content="fr">\n    <meta name="language" content="fr">\n\n    <link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png">\n    <link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png">\n    <link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png">\n    <link rel="manifest" href="/favicon/site.webmanifest">\n    <link rel="mask-icon" href="/favicon/safari-pinned-tab.svg" color="#5bbad5">\n    <link rel="shortcut icon" href="/favicon/favicon.ico">\n    <meta name="msapplication-TileColor" content="#da532c">\n    <meta name="msapplication-config" content="/favicon/browserconfig.xml">\n    <meta name="theme-color" content="#ffffff">\n\n    \x3c!-- GOOGLE FONTS --\x3e\n    @php($google_fonts = \'https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700;800&display=swap\')\n    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />\n    <link rel="preload" as="style" href="{{ $google_fonts }}" />\n    <link rel="stylesheet" href="{{ $google_fonts }}" media="print" onload="this.media=\'all\'" />\n    <noscript>\n        <link rel="stylesheet" href="{{ $google_fonts }}" />\n    </noscript>\n\n    @vite(\'resources/css/app.css\')\n\n    @stack(\'styles\')\n\n    @stack(\'js_vars\')\n\n    {{-- <livewire:styles /> --}}\n</head>\n\n\n\n<body class="page-{{ str_replace(\'.\', \'-\', Route::currentRouteName()) }}">\n\n    {{-- Topbar et menu mobile --}}\n    <div class="topbar">\n        <div class="max-width-large">\n            <a href="{{ env(\'APP_URL\') }}" class="logo"><span>Mon</span> Site</a>\n            {{--<x-menu />--}}\n            <div class="menu-bars" aria-label="Menu">\n                <span>menu</span>\n                @svg(\'coolicon-hamburger-md\', \'menu-bars\')\n            </div>\n        </div>\n    </div>\n    <div class="mobile-menu">\n        @svg(\'coolicon-close-md\', \'menu-close\')\n        {{--<x-menu />--}}\n    </div>\n    <div class="menu-overlay"></div>\n\n\n\n\n    <div class="main">\n\n        <x-flash-messages />\n\n        {{ $slot }}\n\n    </div>\n\n\n    <x-section class="footer text-white">\n        <a href="{{ env(\'APP_URL\') }}" class="logo"><span>Mon</span> Site</a>\n\n        <div class="footer-menu">\n            {{--<p><a href="{{ route(\'admin.dashboard\') }}">Dashboard</a></p>\n            <p><a href="{{ route(\'nova.login\') }}">Panneau de bord Nova</a></p>\n            <p><a href="{{ route(\'realisations.list\') }}">R\xe9alisations</a></p>\n            <p><a href="{{ route(\'posts.list\') }}">Conseils</a></p>\n            <p><a href="{{ route(\'test\') }}">Test</a></p>--}}\n        </div>\n\n        [sections r\xe9seaux sociaux]\n\n    </x-section>\n\n    <div class="footer-line">\n        <p class="copyright">Copyright \xa9{{ date(\'Y\') }} mon-site.com</p>\n        {{--<a href="{{ route(\'mentions-legales\') }}">Mentions l\xe9gales</a>--}}\n    </div>\n\n    {{-- Chargement des js --}}\n    @vite(\'resources/js/app.js\')\n\n    @stack(\'scripts\')\n    {{-- <livewire:scripts /> --}}\n</body>\n\n')),(0,l.kt)("h2",{id:"vitejs"},"Vite.js"),(0,l.kt)("p",null,"Vite.js est le builder js utilis\xe9 par Laravel. Cela permet d'ajouter des plugins au projet via ",(0,l.kt)("inlineCode",{parentName:"p"},"npm"),", de compiler les assets (js, scss, images...) et de live-reload les pages pendant le dev."),(0,l.kt)("h3",{id:"compilation-css-avec-vitejs"},"Compilation CSS avec Vite.js"),(0,l.kt)("p",null,"Installation de quelques plugins pour PostCSS, PostCSS-Nesting et Autoprefixer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install postcss --save-dev\nnpm install postcss-nesting --save-dev\nnpm install autoprefixer --save-dev\n")),(0,l.kt)("p",null,"Puis configuration \xe0 la racine du projet, dans ",(0,l.kt)("inlineCode",{parentName:"p"},"vite.config.js")," :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/vite.config.js"',title:'"/vite.config.js"'},"import { defineConfig } from 'vite';\nimport laravel from 'laravel-vite-plugin';\n\n// CSS\nimport postcssNesting from 'postcss-nesting';\nimport autoprefixer from 'autoprefixer';\n\nexport default defineConfig({\n    plugins: [\n        laravel({\n            input: ['resources/css/app.css', 'resources/js/app.js'], // Ajouter ici les ressources \xe0 compiler\n            refresh: true,\n        }),\n    ],\n    css: {\n        postcss: {\n            plugins: [\n                postcssNesting,\n                autoprefixer\n            ],\n            map: { inline: true }\n        },\n    },\n});\n")),(0,l.kt)("h3",{id:"chargement-des-assets-dans-le-html-avec-vitejs"},"Chargement des assets dans le HTML avec Vite.js"),(0,l.kt)("p",null,"Il faut ensuite charger ces fichiers compil\xe9s dans le Layout blade principal ",(0,l.kt)("inlineCode",{parentName:"p"},"/ressources/views/layout.blade.php")," grace \xe0 la directive sp\xe9ciale ",(0,l.kt)("inlineCode",{parentName:"p"},"@vite"),"."),(0,l.kt)("p",null,"Par exemple, pour les deux fichiers pr\xe9sents dans le ",(0,l.kt)("inlineCode",{parentName:"p"},"input")," de ",(0,l.kt)("inlineCode",{parentName:"p"},"vite.config.js")," ci-dessus, on peut les charger dans le ",(0,l.kt)("inlineCode",{parentName:"p"},"<head>")," avec ",(0,l.kt)("inlineCode",{parentName:"p"},"@vite('resources/css/app.css')")," et ",(0,l.kt)("inlineCode",{parentName:"p"},"@vite('resources/css/app.js')"),". Ca remplace le ",(0,l.kt)("inlineCode",{parentName:"p"},"<style src=...></style>")," pour permettre le live reload pendant le dev, le changement de nom \xe0 chaque nouveau build (\xe9vite d'avoir de vieux fichiers obsol\xe8tes en cache) etc."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="/ressources/views/layout.blade.php"',title:'"/ressources/views/layout.blade.php"'},"<head>\n    <meta charset=\"utf-8\">\n    <title>{{ $title ?? env('APP_NAME') }}</title>\n    <meta name=\"description\" content=\"{{ $description }}\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    \n    ...\n\n    {{-- Chargement du CSS --}}\n    // highlight-start\n    @vite('resources/css/app.css')\n    // highlight-end\n\n    @stack('styles')\n\n    @stack('js_vars')\n</head>\n<body>\n\n    ...\n\n    {{-- Chargement des js --}}\n    // highlight-start\n    @vite('resources/js/app.js')\n    // highlight-end\n</body>\n")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Pour ajouter de nouveaux fichiers CSS au projet projet, vous pouvez soit les ajouter dans ",(0,l.kt)("inlineCode",{parentName:"p"},"vite.config.js"),", soit dans le fichier CSS de base (",(0,l.kt)("inlineCode",{parentName:"p"},"resources/css/app.css")," par exemple) avec un ",(0,l.kt)("inlineCode",{parentName:"p"},'@import "../../node_modules/@fancyapps/ui/dist/fancybox/fancybox.css";')," par exemple.")),(0,l.kt)("h2",{id:"js-commun-\xe0-tous-les-sites-jolimardi"},"JS commun \xe0 tous les sites JoliMardi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/ressources/js/app.js"',title:'"/ressources/js/app.js"'},"import './bootstrap';\n\n/* ---------------    ci-dessous : JS commun \xe0 tous les sites, \xe0 d\xe9placer   ---------------------- */\n\n$(function () {\n\n    //--------- Menu mobile ------------*/\n    $('.menu-bars, .menu-close, .home-menu-bars, .mobile-menu .menu a, .menu-overlay').click(function (e) {\n        e.stopPropagation();\n        $('body').toggleClass('mobile-menu-opened');\n    });\n\n\n    // Click on card [data-href]\n    $('[data-href]').on('click', function (e) {\n        if (!$(e.target).is('a, a *, .dropdown, .dropdown *')) {\n            e.preventDefault();\n            window.location = $(this).data('href');\n        }\n    });\n\n\n    /* ---------     Custom Scroll To (add data-anchor=#id)   ------------------------ */\n    $('[data-anchor]').on('click', function (e) {\n        var anchor = $(this).data('anchor');\n        if (anchor.charAt(0) != '#') {\n            anchor = '#' + anchor;\n        }\n        if ($(anchor).length > 0) {\n            myScrollTo(anchor); // D\xe9finie en bas du fichier\n        }\n    });\n    /* ----------------------------    Scroll To si hash    ------------------------ */\n    if (window.location.hash) {\n        var anchor = window.location.hash;\n        myScrollTo(anchor);\n        scrollAction();\n    }\n\n    /* --------- Scroll ------------- */\n    function scrollAction() {\n        var scrollPos = $(window).scrollTop();\n        if (scrollPos > 200) {\n            $('body').addClass('topbar-small');\n        } else {\n            $('body').removeClass('topbar-small');\n        }\n    }\n    $(window).on('scroll', throttle(scrollAction, 40));\n    $(window).on('load', scrollAction);\n});\n\n\nfunction myScrollTo(anchor) {\n    var $elem;\n    if (anchor instanceof jQuery) {\n        $elem = anchor;\n    } else {\n        var id = anchor;\n        $elem = $(id);\n    }\n    if ($elem.length == 0) {\n        return;\n    }\n    $(\"html, body\").animate({ scrollTop: $elem.offset().top - 75 }, 200);\n}\n\n\n \n\n// Avoid `console` errors in browsers that lack a console.\n(function () {\n    var method;\n    var noop = function () {};\n    var methods = [\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n        'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\n    ];\n    var length = methods.length;\n    var console = (window.console = window.console || {});\n\n    while (length--) {\n        method = methods[length];\n\n        // Only stub undefined methods.\n        if (!console[method]) {\n            console[method] = noop;\n        }\n    }\n}());\n\n\nfunction throttle(fn, threshhold, scope) {\n    threshhold || (threshhold = 250);\n    var last,\n            deferTimer;\n    return function () {\n        var context = scope || this;\n        var now = +new Date,\n                args = arguments;\n        if (last && now < last + threshhold) {\n            // hold on to it\n            clearTimeout(deferTimer);\n            deferTimer = setTimeout(function () {\n                last = now;\n                fn.apply(context, args);\n            }, threshhold);\n        } else {\n            last = now;\n            fn.apply(context, args);\n        }\n    };\n}\n")),(0,l.kt)("h2",{id:"laravel-nova"},"Laravel Nova"),(0,l.kt)("h3",{id:"il-faut-dabord-ajouter-le-repo-priv\xe9-et-ses-credentials-"},"Il faut d'abord ajouter le repo priv\xe9 et ses credentials :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"composer config repositories.nova composer https://nova.laravel.com\n")),(0,l.kt)("p",null,"Puis entrer ses credentials pour ne pas avoir \xe0 les entrer \xe0 chaque fois (adresse mail et cl\xe9 d'api), cette commande va ajouter auth.json \xe0 la racine avec les credentials (ne pas versionner ce fichier)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"composer config http-basic.nova.laravel.com example@mail.com REMPLACER_PAR_NOVA_KEY\n")),(0,l.kt)("h3",{id:"ensuite-installer-nova"},"Ensuite, installer Nova"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Assurez-vous d'avoir les bonnes infos de connexion \xe0 la base de donn\xe9es dans le fichier .env avant le ",(0,l.kt)("inlineCode",{parentName:"p"},"migrate"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require laravel/nova\nphp artisan nova:install\nphp artisan migrate\n")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"}," Certaines configuration de database peuvent sortir une erreur ",(0,l.kt)("inlineCode",{parentName:"p"},"SQLSTATE[42000]: Syntax error or access violation: 1071 La cl\xe9 est trop longue.")," Dans ce cas, ajouter dans ",(0,l.kt)("inlineCode",{parentName:"p"},"app/Service/AppServiceProvider.php")," la ligne suivante dans la fonction boot :"),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="/app/Service/AppServiceProvider.php"',title:'"/app/Service/AppServiceProvider.php"'},"public function boot(): void {\n    Schema::defaultStringLength(191);\n}\n"))),(0,l.kt)("h3",{id:"ajouter-le-premier-utilisateur"},"Ajouter le premier utilisateur"),(0,l.kt)("p",null,"Il faut maintenant ajouter un utilisateur pour pouvoir se connecter au dashboard nova (",(0,l.kt)("inlineCode",{parentName:"p"},"http://mon-url.com/nova"),") :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan nova:user\n")),(0,l.kt)("p",null,"Puis suivre les instructions (choix d'un nom, d'un email et d'un mot de passe pour cr\xe9er l'utilisateur)."),(0,l.kt)("h3",{id:"important-ajouter-les-emails-autoris\xe9s"},"Important, ajouter les emails autoris\xe9s"),(0,l.kt)("p",null,"Lorsque l'on n'est plus en environnement ",(0,l.kt)("inlineCode",{parentName:"p"},"local"),", Nova v\xe9rifie les adresses mail autoris\xe9es, en plus des Nova Users cr\xe9\xe9s. Pour cela, il faut ajouter les emails autoris\xe9s dans ",(0,l.kt)("inlineCode",{parentName:"p"},"app/Providers/NovaServiceProvider.php"),", dans la fonction ",(0,l.kt)("inlineCode",{parentName:"p"},"gate()")," :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="/app/Service/NovaServiceProvider.php"',title:'"/app/Service/NovaServiceProvider.php"'},"protected function gate(){\n    Gate::define('viewNova', function ($user) {\n        $authorized_emails_str = ENV('NOVA_AUTHORIZED_EMAILS', 'mon-email@gmail.com, deuxieme-email@gmail.com');\n        $authorized_emails = explode(',', $authorized_emails_str);\n        $authorized_emails = array_map('trim', $authorized_emails);\n        return in_array($user->email, $authorized_emails);\n    });\n}\n")),(0,l.kt)("p",null,"et en ajoutant dans le ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:'language-title="/.env"'},"NOVA_AUTHORIZED_EMAILS='mon-email@gmail.com, deuxieme-email@gmail.com'\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pour plus de d\xe9tails sur Laravel nova, retrouvez la documentation officielle ici : ",(0,l.kt)("a",{parentName:"strong",href:"https://nova.laravel.com/docs/4.0/installation.html"},"https://nova.laravel.com/docs/4.0/installation.html"))),(0,l.kt)("h2",{id:"installation-de-plugins-js-fr\xe9quents"},"Installation de plugins JS fr\xe9quents"),(0,l.kt)("h3",{id:"jquery"},"jQuery"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install jquery --save-dev\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/ressources/js/bootstrap.js"',title:'"/ressources/js/bootstrap.js"'},"import axios from 'axios';\nwindow.axios = axios;\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n// highlight-start\n/* -------   jQuery   ------- */\n// npm install jquery --save-dev\nimport $ from 'jquery';\nwindow.$ = $;\n// highlight-end\n")),(0,l.kt)("h3",{id:"fancybox"},"Fancybox"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @fancyapps/ui --save-dev\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="resources/css/app.css"',title:'"resources/css/app.css"'},'@import "../../node_modules/@fancyapps/ui/dist/fancybox/fancybox.css";\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/ressources/js/bootstrap.js"',title:'"/ressources/js/bootstrap.js"'},'/* -------   jQuery   ------- */\nimport $ from \'jquery\';\nwindow.$ = $;\n\n// highlight-start\n/* -------   Fancybox   ------- */\n// npm install @fancyapps/ui --save-dev\n// pour le css : @import "../../node_modules/@fancyapps/ui/dist/fancybox/fancybox.css";\nimport { Fancybox } from "@fancyapps/ui";\nFancybox.bind();\n// highlight-end\n')),(0,l.kt)("h2",{id:"plugins-laravel"},"Plugins Laravel"),(0,l.kt)("p",null,"Suite de plugin, r\xe9f\xe9rez vous \xe0 notre documentation dans la cat\xe9gorie ",(0,l.kt)("inlineCode",{parentName:"p"},"Packages")," pour avoir plus \xe0 leur propos."),(0,l.kt)("h3",{id:"nova-helpers"},"Nova helpers"),(0,l.kt)("p",null,"Tout les packages concernant Nova."),(0,l.kt)("p",null,"Gestion de media avec : "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require ebess/advanced-nova-media-library\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Gestion de field multi relationnel avec : "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require benjacho/belongs-to-many-field\n")),(0,l.kt)("p",null,"Puis "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan vendor:publish --tag=nova-media-library\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Ajout d'autres langues pour Nova avec :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require coderello/laravel-nova-lang\n")),(0,l.kt)("p",null,"Et "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan nova-lang:publish fr\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Am\xe9liore la gestion vid\xe9o : "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require m-a-k-o/youtube-field\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Editeur de texte dans Nova :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require mostafaznv/nova-ckeditor\n")),(0,l.kt)("p",null,"Et "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'php artisan vendor:publish --provider="Mostafaznv\\NovaCkEditor\\FieldServiceProvider"\n')),(0,l.kt)("h2",{id:"jolimardi-plugins"},"Jolimardi plugins"),(0,l.kt)("p",null,"Les plugins ajouter par JoliMardi, rendez-vous sur la documentation du package pour plus d'informations."),(0,l.kt)("h2",{id:"todo"},"@TODO"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Supprimer Images et Videos related avec ckeditor, g\xe9rer par media-librairy"),(0,l.kt)("li",{parentName:"ul"},"Am\xe9liorer laravel-mysections erreur stabilit\xe9, ajouter une version"),(0,l.kt)("li",{parentName:"ul"},"AJouter publishables pour jolimardi/laravel-flash pour le composant ",(0,l.kt)("inlineCode",{parentName:"li"},"<x-flash-messages />"))))}d.isMDXComponent=!0}}]);