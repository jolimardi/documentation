"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[484],{5680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>v});var t=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,v=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?t.createElement(v,o(o({ref:a},c),{},{components:n})):t.createElement(v,o({ref:a},c))}));function v(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5917:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var t=n(8168),r=(n(6540),n(5680));const i={title:"Laravel Nova"},o=void 0,l={unversionedId:"laravel/Installation/StepByStep/laravel-nova",id:"laravel/Installation/StepByStep/laravel-nova",title:"Laravel Nova",description:"Il faut d'abord ajouter le repo priv\xe9 et ses credentials :",source:"@site/docs/laravel/Installation/StepByStep/laravel-nova.md",sourceDirName:"laravel/Installation/StepByStep",slug:"/laravel/Installation/StepByStep/laravel-nova",permalink:"/documentation/docs/laravel/Installation/StepByStep/laravel-nova",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/laravel/Installation/StepByStep/laravel-nova.md",tags:[],version:"current",frontMatter:{title:"Laravel Nova"},sidebar:"laravelSidebar",previous:{title:"Installer Laravel",permalink:"/documentation/docs/laravel/Installation/StepByStep/laravel"},next:{title:"Packages Composer",permalink:"/documentation/docs/laravel/Installation/StepByStep/package-composer"}},s={},p=[{value:"Il faut d&#39;abord ajouter le repo priv\xe9 et ses credentials :",id:"il-faut-dabord-ajouter-le-repo-priv\xe9-et-ses-credentials-",level:2},{value:"Ensuite, installer Nova",id:"ensuite-installer-nova",level:2},{value:"Ajouter le premier utilisateur",id:"ajouter-le-premier-utilisateur",level:2},{value:"Important, ajouter les emails autoris\xe9s",id:"important-ajouter-les-emails-autoris\xe9s",level:2},{value:"Ajouter le custom CSS",id:"ajouter-le-custom-css",level:2},{value:"Cr\xe9er le fichier css dans /public",id:"cr\xe9er-le-fichier-css-dans-public",level:3},{value:"Cherger le css au boot de Nova",id:"cherger-le-css-au-boot-de-nova",level:3}],c={toc:p},u="wrapper";function d(e){let{components:a,...n}=e;return(0,r.yg)(u,(0,t.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"il-faut-dabord-ajouter-le-repo-priv\xe9-et-ses-credentials-"},"Il faut d'abord ajouter le repo priv\xe9 et ses credentials :"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"composer config repositories.nova composer https://nova.laravel.com\n")),(0,r.yg)("p",null,"Puis entrer ses credentials pour ne pas avoir \xe0 les entrer \xe0 chaque fois (adresse mail et cl\xe9 d'api), cette commande va ajouter auth.json \xe0 la racine avec les credentials (ne pas versionner ce fichier)."),(0,r.yg)("admonition",{type:"warning"},(0,r.yg)("p",{parentName:"admonition"},"Il ne faut pas versionner ce fichier ",(0,r.yg)("inlineCode",{parentName:"p"},"auth.json")," sur Git, il contient la cl\xe9 d'api.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"composer config http-basic.nova.laravel.com example@mail.com REMPLACER_PAR_NOVA_KEY\n")),(0,r.yg)("h2",{id:"ensuite-installer-nova"},"Ensuite, installer Nova"),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"Assurez-vous d'avoir les bonnes infos de connexion \xe0 la base de donn\xe9es dans le fichier .env avant le ",(0,r.yg)("inlineCode",{parentName:"p"},"migrate"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"composer require laravel/nova\nphp artisan nova:install\nphp artisan migrate\n")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"}," Certaines configuration de database peuvent sortir une erreur ",(0,r.yg)("inlineCode",{parentName:"p"},"SQLSTATE[42000]: Syntax error or access violation: 1071 La cl\xe9 est trop longue.")," Dans ce cas, ajouter dans ",(0,r.yg)("inlineCode",{parentName:"p"},"app/Service/AppServiceProvider.php")," la ligne suivante dans la fonction boot :"),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-php",metastring:'title="/app/Service/AppServiceProvider.php"',title:'"/app/Service/AppServiceProvider.php"'},"use Illuminate\\Support\\ServiceProvider;\n\n...\n\npublic function boot(): void {\n    Schema::defaultStringLength(191);\n}\n"))),(0,r.yg)("h2",{id:"ajouter-le-premier-utilisateur"},"Ajouter le premier utilisateur"),(0,r.yg)("p",null,"Il faut maintenant ajouter un utilisateur pour pouvoir se connecter au dashboard nova (",(0,r.yg)("inlineCode",{parentName:"p"},"http://mon-url.com/nova"),") :"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"php artisan nova:user\n")),(0,r.yg)("p",null,"Puis suivre les instructions (choix d'un nom, d'un email et d'un mot de passe pour cr\xe9er l'utilisateur)."),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Bonus : Ajouter un utilisateur jolimardi par d\xe9faut (Via une migration)"),(0,r.yg)("p",null,"Ajouter dans ",(0,r.yg)("inlineCode",{parentName:"p"},"database/migrations"),": "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-php",metastring:"title='2023_06_27_160507_add_nova_user_jolimardi.php'",title:"'2023_06_27_160507_add_nova_user_jolimardi.php'"},'<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void {\n        // Quelques valeurs pr\xe9-remplies\n        DB::table(\'users\')->insert([\n            "name" => "Joli Mardi",\n            "email" => "romain.cherot@gmail.com",\n            "email_verified_at" => NULL,\n            "password" => \'$2y$10$flJKeNiiWe57txt1eCk9deNCwQ4xShzf85kquM.1oqS5j.TcRstf2\',\n            "remember_token" => NULL,\n            "created_at" => "2023-06-24 16:09:35",\n            "updated_at" => "2023-06-24 16:11:03",\n        ]);\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void {\n        DB::table(\'users\')->where(\'email\', \'romain.cherot@gmail.com\')->delete();\n    }\n};\n'))),(0,r.yg)("h2",{id:"important-ajouter-les-emails-autoris\xe9s"},"Important, ajouter les emails autoris\xe9s"),(0,r.yg)("admonition",{type:"warning"},(0,r.yg)("p",{parentName:"admonition"},"Nova ne v\xe9rifie pas les adresses mail en environnement local, mais le fera en prod (risque de bug lors du passage en prod, difficile \xe0 d\xe9bugguer si pas pris en compte d\xe8s le d\xe9part)."),(0,r.yg)("p",{parentName:"admonition"},"Lorsque l'on n'est plus en environnement ",(0,r.yg)("inlineCode",{parentName:"p"},"local"),", Nova v\xe9rifie les adresses mail autoris\xe9es, en plus des Nova Users cr\xe9\xe9s. Pour cela, il faut ajouter les emails autoris\xe9s dans ",(0,r.yg)("inlineCode",{parentName:"p"},"app/Providers/NovaServiceProvider.php"),", dans la fonction ",(0,r.yg)("inlineCode",{parentName:"p"},"gate()"),".")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-php",metastring:'title="/app/Service/NovaServiceProvider.php"',title:'"/app/Service/NovaServiceProvider.php"'},"protected function gate(){\n    Gate::define('viewNova', function ($user) {\n        $authorized_emails_str = ENV('NOVA_AUTHORIZED_EMAILS', 'mon-email@gmail.com, deuxieme-email@gmail.com');\n        $authorized_emails = explode(',', $authorized_emails_str);\n        $authorized_emails = array_map('trim', $authorized_emails);\n        return in_array($user->email, $authorized_emails);\n    });\n}\n")),(0,r.yg)("p",null,"et en ajoutant dans le ",(0,r.yg)("inlineCode",{parentName:"p"},".env")," :"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:'language-title="/.env"'},"NOVA_AUTHORIZED_EMAILS='mon-email@gmail.com, deuxieme-email@gmail.com'\n")),(0,r.yg)("h2",{id:"ajouter-le-custom-css"},"Ajouter le custom CSS"),(0,r.yg)("h3",{id:"cr\xe9er-le-fichier-css-dans-public"},"Cr\xe9er le fichier css dans /public"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-css",metastring:'title="/public/nova_overrides.css"',title:'"/public/nova_overrides.css"'},"\n/* Multiselect - BelongsToMany plugin (add borders) */\n\n.multiselect{\n    border-color: rgba(var(--colors-gray-300));\n    border-width: 1px;\n    border-radius: 4px;\n}\n\n\n/* ---------   CKEditor content ------------ */\n.ck.ck-content h1{\n    font-weight: 700;\n    font-size: 48px;\n    line-height: 1.2;\n}\n.ck.ck-content h2{\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 1.3;\n}\n.ck.ck-content h3{\n    font-weight: 700;\n    font-size: 21px;\n    line-height: 1.5;\n}\n.ck.ck-content h4{\n    font-weight: 700;\n    font-size: 14px;\n}\nbody .ck.ck-reset.ck-editor .ck-editor__editable_inline *{\n    font-family: Nunito Sans, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;\n    color: #222;\n}\nbody .ck.ck-reset.ck-editor .ck-editor__editable_inline blockquote, body .ck.ck-reset.ck-editor .ck-editor__editable_inline li, body .ck.ck-reset.ck-editor .ck-editor__editable_inline ol, body .ck.ck-reset.ck-editor .ck-editor__editable_inline p, body .ck.ck-reset.ck-editor .ck-editor__editable_inline ul{\n    font-size: 14px !important;\n}\n")),(0,r.yg)("h3",{id:"cherger-le-css-au-boot-de-nova"},"Cherger le css au boot de Nova"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-php",metastring:'title="/app/Service/NovaServiceProvider.php"',title:'"/app/Service/NovaServiceProvider.php"'},"public function boot() {\n    parent::boot();\n\n    // Add custom CSS\n    Nova::style('nova_overrides', public_path('nova_overrides.css'));\n}\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Pour plus de d\xe9tails sur Laravel nova, retrouvez la documentation officielle ici : ",(0,r.yg)("a",{parentName:"strong",href:"https://nova.laravel.com/docs/4.0/installation.html"},"https://nova.laravel.com/docs/4.0/installation.html"))))}d.isMDXComponent=!0}}]);