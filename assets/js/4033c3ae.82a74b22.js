"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6409],{5680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>g});var t=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=t.createContext({}),p=function(e){var a=t.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=p(e.components);return t.createElement(o.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,g=u["".concat(o,".").concat(m)]||u[m]||d[m]||s;return n?t.createElement(g,l(l({ref:a},c),{},{components:n})):t.createElement(g,l({ref:a},c))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=m;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<s;p++)l[p]=n[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1534:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var t=n(8168),r=(n(6540),n(5680));const s={title:"Jolimardi/Laravel-flash"},l=void 0,i={unversionedId:"laravel/Features/jm-flash",id:"laravel/Features/jm-flash",title:"Jolimardi/Laravel-flash",description:"Facade Flash",source:"@site/docs/laravel/Features/jm-flash.md",sourceDirName:"laravel/Features",slug:"/laravel/Features/jm-flash",permalink:"/documentation/docs/laravel/Features/jm-flash",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/laravel/Features/jm-flash.md",tags:[],version:"current",frontMatter:{title:"Jolimardi/Laravel-flash"},sidebar:"laravelSidebar",previous:{title:"Jolimardi/Laravel-sections",permalink:"/documentation/docs/laravel/Features/jm-sections"},next:{title:"Jolimardi/Laravel-metas",permalink:"/documentation/docs/laravel/Features/jm-metas"}},o={},p=[{value:"Facade Flash",id:"facade-flash",level:2},{value:"Installer notiflix",id:"installer-notiflix",level:2},{value:"Render les messages sur le site",id:"render-les-messages-sur-le-site",level:3}],c={toc:p},u="wrapper";function d(e){let{components:a,...n}=e;return(0,r.yg)(u,(0,t.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"facade-flash"},"Facade Flash"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="console"',title:'"console"'},'composer require jolimardi/laravel-flash:dev-master\n\nphp artisan vendor:publish --provider="JoliMardi\\Flash\\FlashServiceProvider"\n')),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("inlineCode",{parentName:"p"},":dev-main")," permet d'outre-passer la v\xe9rification de stabilit\xe9 pour le moment.\n",(0,r.yg)("inlineCode",{parentName:"p"},"vendor:publish")," permet d'avoir acc\xe8s au template qui affiche les messages dans ",(0,r.yg)("inlineCode",{parentName:"p"},"resources/views/vendor/flash-messages/")," ")),(0,r.yg)("p",null,"Ajouter l'alias personnalis\xe9 dans ",(0,r.yg)("inlineCode",{parentName:"p"},"config/app.php")," -> ",(0,r.yg)("inlineCode",{parentName:"p"},"aliases"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-php",metastring:'title="config/app.php"',title:'"config/app.php"'},"    'aliases' => Facade::defaultAliases()->merge([\n        // highlight-start\n        'MyFlash' => JoliMardi\\Flash\\Flash::class,\n        // highlight-end\n    ])->toArray(),\n")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"On \xe9vite d'avoir Flash comme alias \xe0 cause de la facade Flash de Laravel par d\xe9faut"),(0,r.yg)("p",{parentName:"admonition"},"Cet alias s'utilise dans la vue uniquement. Il n'y a pas besoin de la modifier par d\xe9faut")),(0,r.yg)("p",null,"Apr\xe8s avoir publish on retrouvera la vue qui display les messages, ",(0,r.yg)("strong",{parentName:"p"},"ne pas modifier par d\xe9faut :")," "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-php",metastring:'title="resources/view/vendor/flash-messages/message.blade.php"',title:'"resources/view/vendor/flash-messages/message.blade.php"'},"@props([\n    'types_notify_mapping' => [\n        'success' => 'success',\n        'error' => 'failure',\n        'notice' => 'info',\n        'warning' => 'warning',\n    ],\n])\n\n@if (MyFlash::has())\n\n    {{-- Config initiale de Notify --}}\n    @pushOnce('scripts')\n        <script type=\"text/javascript\">\n            window.addEventListener('DOMContentLoaded', function() {\n                Notify.init({\n                    position: 'center-top',\n                    distance: '82px'\n                });\n            });\n        <\/script>\n    @endPushOnce\n\n    @foreach (MyFlash::getMessages() as $type => $messages)\n        @foreach ($messages as $message)\n            @push('scripts')\n                <script type=\"text/javascript\">\n                    {{-- cas particulier pour error --}}\n                    @if ($type == 'error')\n                        window.addEventListener('DOMContentLoaded', function() {\n                            Notify.failure(\"{{ $message }}\", {\n                                backOverlay: true,\n                                closeButton: true\n                            });\n                        });\n                    @else\n                        window.addEventListener('DOMContentLoaded', function() {\n                            Notify.{{ $types_notify_mapping[$type] ?? 'info' }}(\"{{ $message }}\", {});\n                        });\n                    @endif\n                <\/script>\n            @endpush\n        @endforeach\n    @endforeach\n@endif\n")),(0,r.yg)("p",null,"Puis utiliser la facade dans un controller, exemple : "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Http/Controller/IndexController.php"',title:'"app/Http/Controller/IndexController.php"'},"use JoliMardi\\Flash\\Flash;\n\nclass IndexController extends Controller {\n\n    public function test() {\n\n        Flash::message('success', 'Ceci est un message de type succ\xe8s');\n        Flash::success('Ceci est un message de succ\xe8sssssss');\n        Flash::error('Ceci est un autre message d\\'erreur');\n        Flash::notice('Ceci est un message de notification');\n\n        return view('test');\n    }\n\n}\n")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"La facade Flash de jolimardi utilise le package notiflix pour display les messages, il n'y a donc pas besoin de l'ins\xe9rer dans la vue. Tout est pris en charge par d\xe9faut.")),(0,r.yg)("h2",{id:"installer-notiflix"},"Installer notiflix"),(0,r.yg)("p",null,"Installer le package : "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="console"',title:'"console"'},"npm install notiflix --save-dev\n")),(0,r.yg)("p",null,"Puis ajouter : "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="resources/js/bootstrap.js"',title:'"resources/js/bootstrap.js"'},"...\n/* -------   Notiflix   ------- */\n// npm install notiflix --save-dev\n// pour le css : pas besoin, c'est du all in one\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nwindow.Notify = Notify;\n")),(0,r.yg)("h3",{id:"render-les-messages-sur-le-site"},"Render les messages sur le site"),(0,r.yg)("p",null,"Ajouter la directive ",(0,r.yg)("inlineCode",{parentName:"p"},"@push(scripts)")," au layout du site, exemple :"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-php",metastring:'title="resources/view/layout.blade.php"',title:'"resources/view/layout.blade.php"'},"<head>\n    ...\n</head>\n<body>\n    ...\n    {{-- Chargement des js --}}\n    @vite('resources/js/app.js')\n\n    @stack('scripts')\n</body>\n\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Retrouvez tout les types de message dans la documentation du package : ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/jolimardi/laravel-flash"},"https://github.com/jolimardi/laravel-flash"))))}d.isMDXComponent=!0}}]);