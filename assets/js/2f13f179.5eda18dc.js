"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3628],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=o,f=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return t?r.createElement(f,i(i({ref:n},d),{},{components:t})):r.createElement(f,i({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7384:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={title:"Dropzone pour l'envoi de fichiers"},i=void 0,l={unversionedId:"laravel/Features/dropzone",id:"laravel/Features/dropzone",title:"Dropzone pour l'envoi de fichiers",description:"Ajout du JS et CSS",source:"@site/docs/laravel/Features/dropzone.md",sourceDirName:"laravel/Features",slug:"/laravel/Features/dropzone",permalink:"/documentation/docs/laravel/Features/dropzone",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/laravel/Features/dropzone.md",tags:[],version:"current",frontMatter:{title:"Dropzone pour l'envoi de fichiers"},sidebar:"laravelSidebar",previous:{title:"Ajouter des form-component",permalink:"/documentation/docs/laravel/Features/laravel-form-components"},next:{title:"Cr\xe9er un formulaire basique de A \xe0 Z",permalink:"/documentation/docs/laravel/Features/creer-un-formulaire"}},s={},p=[{value:"Ajout du JS et CSS",id:"ajout-du-js-et-css",level:2},{value:"Ajouter les variables globales de Max Upload Size",id:"ajouter-les-variables-globales-de-max-upload-size",level:2},{value:"Ajouter la route et le controller",id:"ajouter-la-route-et-le-controller",level:2},{value:"Markup du champ simple",id:"markup-du-champ-simple",level:2},{value:"Markup du champ multiple avec limite max d&#39;items",id:"markup-du-champ-multiple-avec-limite-max-ditems",level:2}],d={toc:p},u="wrapper";function c(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"ajout-du-js-et-css"},"Ajout du JS et CSS"),(0,o.kt)("p",null,"(voir Fitapply, ou MesArtistes pour cas multiples)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="js/app.js"',title:'"js/app.js"'},"\n    /* -----------------    Dropzone   ----------------- */\n\n    $(\".add-cv.dropzone\").on(\"upload:success\", function (event, data) {\n        if (typeof data.message != 'undefined' && data.message.length > 0) {\n\n            // Une seule photo, on prend message[0], pas de each :\n            let cvFilename = data.message;\n\n            let $container = $(this).closest('.input-dropzone');\n\n            // On met la valeur dans le input hidden qui sera post\xe9 avec le formulaire\n            $container.find('input[name=\"cv_filename\"]').val(cvFilename);\n\n            // On ajoute la classe pour montrer la photo\n            $container.addClass('has-cv');\n\n        }\n    });\n\n    $(\".input-dropzone.cv .remove-file\").on('click', function () {\n        let $container = $(this).closest('.input-dropzone');\n        // On vide le champ\n        $container.find('input[type=\"hidden\"]').val('');\n        // On enl\xe8ve la classe, \xe7a affiche la dropzone\n        $container.removeClass('has-cv');\n    });\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="js/dropzone.js <= C\'est le plugin g\xe9n\xe9rique \xe0 importer"',title:'"js/dropzone.js',"<":"","C'est":!0,le:!0,plugin:!0,"g\xe9n\xe9rique":!0,"\xe0":!0,'importer"':!0},"import {MySwal} from './my-sweetalert2-presets.js'\n\n$(function () {\n\n    // Initialisation des dropzones, avec les events\n    $('.dropzone').each(function (id, elem) {\n        let $dropzone = $(elem);\n        let $input_file = $dropzone.find('input[type=\"file\"]');\n\n        $dropzone.on('dragover drop', function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n            if (e.type == 'drop') {\n                let files = e.originalEvent.dataTransfer.files;\n                ajax_file_upload($dropzone, files);\n            }\n        });\n\n        $input_file.on('change', function (e) {\n            let files = this.files;\n            if (this.files.length > 0) {\n                ajax_file_upload($dropzone, files);\n            }\n        });\n    });\n\n\n\n\n    function ajax_file_upload($dropzone, files) {\n\n        $dropzone.trigger('upload:start');\n        let url = $dropzone.data('url');\n\n        // Reset de l'UI\n        initProgressBar($dropzone);\n        $dropzone.addClass('is-uploading');\n        $dropzone.find('.error').html(\"\");\n\n        if (typeof (files) !== undefined) {\n            let form_data = new FormData();\n            for (let i = 0; i < files.length; i++) {\n\n                if (files[i].size > max_server_upload_filesize_bytes) {\n                    MySwal.fire({\n                        icon: 'error',\n                        title: \"Attention, le fichier d\xe9passe la taille limite de \" + max_server_upload_filesize_human_readable,\n                    });\n                    $dropzone.removeClass('is-uploading');\n                    hideProgressBar($dropzone);\n                    return;\n                }\n                form_data.append('files[]', files[i]);\n            }\n\n            $.ajax({\n                url: url,\n                type: 'post',\n                data: form_data,\n                contentType: false,\n                processData: false,\n                xhr: function () {\n                    let xhr = new window.XMLHttpRequest();\n                    //Download progress\n                    xhr.upload.addEventListener(\"progress\", function (evt) {\n                        if (evt.lengthComputable) {\n                            let progress = evt.loaded / evt.total * 100;\n                            updateProgressBar($dropzone, progress);\n                        }\n                    }, false);\n                    return xhr;\n                },\n            }).done(function (data, textStats, jqXHR) {\n\n                $dropzone.removeClass('is-uploading');\n                hideProgressBar($dropzone);\n\n                if (typeof data.message !== 'undefined') {\n                    $dropzone.trigger('upload:success', [data]);\n                } else if (typeof data.error === 'string') {\n                    MySwal.fire({\n                        icon: 'error',\n                        text: data.error,\n                        title: \"Oups, \xe9chec de l'envoi\",\n                    });\n                } else {\n                    MySwal.fire({\n                        icon: 'error',\n                        title: \"Oups, \xe9chec de l'envoi...\",\n                    })\n                }\n\n            }).fail(function (jqXHR, textStatus) {\n                $dropzone.removeClass('is-uploading');\n                hideProgressBar($dropzone);\n                let text = '';\n                if (typeof jqXHR.responseJSON !== 'undefined' && typeof jqXHR.responseJSON.message === 'string') {\n                    text = jqXHR.responseJSON.message;\n                } else if (typeof jqXHR.statusText === 'string') {\n                    text = jqXHR.statusText;\n                }\n                MySwal.fire({\n                    icon: 'error',\n                    text: text,\n                    title: \"Oups, \xe9chec de l'envoi\",\n                });\n            });\n\n        }\n    }\n\n    function hideProgressBar($dropzone) {\n        updateProgressBar($dropzone, 0);\n        $dropzone.find('.progress').hide();\n    }\n\n    function initProgressBar($dropzone) {\n        updateProgressBar($dropzone, 0);\n        $dropzone.find('.progress').show();\n    }\n\n    function updateProgressBar($dropzone, percentage = 0) {\n        let $progress = $dropzone.find('.progress');\n        if ($progress.is(':not(:visible)')) {\n            $progress.show();\n        }\n        percentage = Math.round(percentage);\n        $progress.width(percentage + \"%\");\n    }\n});\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="dropzone.css"',title:'"dropzone.css"'},"/* ----------------------------------------------------------------------- */\n/* ---------------         File Upload (dropzones)        ---------------- */\n/* ----------------------------------------------------------------------- */\n.dropzone {\n    background-color: var(--light-gray);\n    padding: 1.5em;\n    text-align: center;\n    border: var(--light-gray-alt) 2px dashed;\n    border-radius: 10px;\n    line-height: 1.2;\n    font-size: var(--sm-fs);\n    margin-top: 1em;\n    margin-bottom: 1em;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    .dropzone-icon {\n        margin-bottom: 8px;\n        text-align: center;\n        font-size: 32px;\n        opacity: 0.25;\n        transition: .25s;\n    }\n    .dropzone-legend {\n        cursor: default;\n        pointer-events: none;\n        font-size: var(--sm-fs);\n        margin: 8px auto;\n        opacity: 0.6;\n        color: var(--gray-text);\n    }\n\n    label {\n        margin: auto;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        transition: .15s;\n\n        &:hover {\n            &, .btn-link {\n                color: var(--accent);\n            }\n            .dropzone-icon {\n                opacity: 1;\n            }\n        }\n    }\n\n\n    .show-before-uploading {\n\n        &, label {\n            flex-grow: 1;\n            display: flex;\n            width: 100%;\n            margin: 0;\n            justify-content: center;\n            align-items: center;\n        }\n    }\n    .show-while-uploading {\n        display: none;\n        width: 100%;\n    }\n    &.is-uploading {\n        .show-while-uploading {\n            display: block;\n        }\n        .show-before-uploading {\n            display: none;\n        }\n    }\n}\n\n.progressbar {\n    width: 100%;\n    max-width: 220px;\n    height: 10px;\n    border-radius: 50px;\n    background-color: rgba(0, 0, 0, 0.1);\n    position: relative;\n    overflow: hidden;\n    margin: 8px auto;\n\n    .progress {\n        position: absolute;\n        left: 0;\n        top: 0;\n        bottom: 0;\n        background: var(--accent);\n        width: 0%;\n        transition: .1s;\n    }\n}\n")),(0,o.kt)("h2",{id:"ajouter-les-variables-globales-de-max-upload-size"},"Ajouter les variables globales de Max Upload Size"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="resources/views/layout.blade.php"',title:'"resources/views/layout.blade.php"'},"<html>\n  <head>\n    ...\n\n    \x3c!-- Variables pour Dropzone (max upload size)   --\x3e\n    @if( ! preg_match('/^[\\d]+[\\s]?M$/m', ini_get('upload_max_filesize')))\n        @dd(\"Impossible de r\xe9cup\xe9rer upload_max_filesize via ini_get('upload_max_filesize') pour le script de dropzone depuis. Format attendu (ex: 20M). (Voir dans les variables js de layout.blade.php\")\n    @endif\n    <script type=\"text/javascript\">\n      const max_server_upload_filesize_human_readable = \"{{ str_replace('M', ' Mo', ini_get('upload_max_filesize')) }}\";\n      const max_server_upload_filesize_bytes = \"{{ (int) ini_get(\"upload_max_filesize\")*1024 }}\";\n    <\/script>\n\n    ...\n  </head>\n</html>\n")),(0,o.kt)("h2",{id:"ajouter-la-route-et-le-controller"},"Ajouter la route et le controller"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php",metastring:"routes/web.php","routes/web.php":!0},"Route::post('/candidat/upload-cv', 'Candidate\\DashboardController@uploadCv')->name('candidate.upload-cv')->middleware(['can:edit own user']);\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php",metastring:"MonController.php","MonController.php":!0},"\n    // Upload ajax du CV\n    public function uploadCv(Request $request) {\n\n        $user = $request->user();\n        if (!$user) {\n            abort(401, 'Utilisateur introuvable');\n        }\n\n\n        // Nom du champ \xe0 envoyer en xhr : files\n        if (!isset($request->file('files')[0]) || !$request->file('files')[0]) {\n            abort(400, 'Aucun fichier re\xe7u sur le serveur ($inputs[\"files\"])');\n        }\n        // get extension from originalName\n        $extension = $request->file('files')[0]->getClientOriginalExtension();\n\n\n        $filename = \"cv-{$user->id}-\" . Str::slug($user->fullname) . \".$extension\";\n        $path = Storage::disk('cv')->putFileAs('cv', $request->file('files')[0], $filename);\n\n        if (!$path) {\n            abort(400, 'Impossible d\\'enregistrer le fichier');\n        }\n\n        // Return json with success message\n        return response()->json([\n            'message' => $path\n        ]);\n    }\n")),(0,o.kt)("h2",{id:"markup-du-champ-simple"},"Markup du champ simple"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="MonFormulaire.blade.php"',title:'"MonFormulaire.blade.php"'},'\n\x3c!--       CV optionnel (ATTENTION : \xe0 modifier aussi dans my-acount.blade.php si modif  --\x3e\n\n\x3c!-- .dropzone contient toute la logique js, dont l\'event trigger(\'done\') pour d\xe9clencher l\'update de l\'UI --\x3e\n<div class="input input-dropzone cv {{ $user->cv_filename ? \'has-cv\' : \'\' }}">\n    <div class="show-cv">\n        <div class="label">Mon CV</div>\n        <div class="card flat show-file cv">\n            <div class="card-body">\n                <div class="filename">@svg(\'coolicon-file-document\') {{ $user->CVTitle }}</div>\n                <div class="remove-file" title="Modifier mon CV">@svg(\'coolicon-close-md\', \'icon-close\')</div>\n            </div>\n        </div>\n    </div>\n    <div class="show-dropzone">\n        <div class="label">Ajouter mon CV</div>\n        <div class="dropzone add-cv" data-url="{{ route(\'candidate.upload-cv\') }}">\n            <div class="show-before-uploading">\n                <label for="cv_file">\n                    @svg(\'coolicon-file-download\', \'dropzone-icon\')<span class="btn-link">Ajouter mon CV</span>\n                </label>\n            </div>\n            <div class="show-while-uploading">\n                Envoi en cours...\n                <div class="progressbar">\n                    <div class="progress"></div>\n                </div>\n            </div>\n            <input type="file" name="cv_filename_file" id="cv_file" accept="application/msword, application/pdf, image/*" class="hide">\n            <x-form-input type="hidden" name="cv_filename" :show-errors="false" />\n        </div>\n        <div class="help">Ajoute ton CV pour augmenter tes chances de recevoir une offre qui te correspond&nbsp;!</div>\n    </div>\n    <x-form-errors name="cv_filename" />\n</div>\n')),(0,o.kt)("h2",{id:"markup-du-champ-multiple-avec-limite-max-ditems"},"Markup du champ multiple avec limite max d'items"),(0,o.kt)("p",null,"A compl\xe9ter, voir MesArtistes.fr sur my-account"))}c.isMDXComponent=!0}}]);